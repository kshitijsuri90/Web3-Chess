{"ast":null,"code":"var _jsxFileName = \"/Users/kshitij.suri/Documents/Personal Work/nft-chess/src/components/King.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass King {\n  constructor(player) {\n    this.player = player;\n    this.highlight = 0;\n    this.possible = 0;\n    this.checked = 0;\n    this.in_check = 0;\n    this.icon = player == \"w\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"./assets/icons/white_king.png\",\n      className: \"piece\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"./assets/icons/black_king.png\",\n      className: \"piece\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this);\n    this.ascii = player == \"w\" ? \"k\" : \"K\";\n  } // function that defines piece's valid move shape\n\n\n  can_move(start, end) {\n    var start_row = 8 - Math.floor(start / 8);\n    var start_col = start % 8 + 1;\n    var end_row = 8 - Math.floor(end / 8);\n    var end_col = end % 8 + 1;\n    var row_diff = end_row - start_row;\n    var col_diff = end_col - start_col;\n\n    if (row_diff == 1 && col_diff == -1) {\n      return true;\n    } else if (row_diff == 1 && col_diff == 0) {\n      return true;\n    } else if (row_diff == 1 && col_diff == 1) {\n      return true;\n    } else if (row_diff == 0 && col_diff == 1) {\n      return true;\n    } else if (row_diff == -1 && col_diff == 1) {\n      return true;\n    } else if (row_diff == -1 && col_diff == 0) {\n      return true;\n    } else if (row_diff == -1 && col_diff == -1) {\n      return true;\n    } else if (row_diff == 0 && col_diff == -1) {\n      return true;\n    } else if (row_diff == 0 && col_diff == 2) {\n      return true;\n    } else if (row_diff == 0 && col_diff == -2) {\n      return true;\n    }\n\n    return false;\n  }\n\n}\n\nexport default King;","map":{"version":3,"sources":["/Users/kshitij.suri/Documents/Personal Work/nft-chess/src/components/King.js"],"names":["King","constructor","player","highlight","possible","checked","in_check","icon","ascii","can_move","start","end","start_row","Math","floor","start_col","end_row","end_col","row_diff","col_diff"],"mappings":";;;AAAA,MAAMA,IAAN,CAAW;AACPC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,QAAL,GAAgB,CAAhB;AACA,SAAKC,OAAL,GAAe,CAAf;AACA,SAAKC,QAAL,GAAgB,CAAhB;AACA,SAAKC,IAAL,GACEL,MAAM,IAAI,GAAV,gBACE;AAAK,MAAA,GAAG,EAAC,+BAAT;AAAyC,MAAA,SAAS,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE;AAAK,MAAA,GAAG,EAAC,+BAAT;AAAyC,MAAA,SAAS,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,YAJJ;AAMA,SAAKM,KAAL,GAAaN,MAAM,IAAI,GAAV,GAAgB,GAAhB,GAAsB,GAAnC;AACD,GAdM,CAgBP;;;AACAO,EAAAA,QAAQ,CAACC,KAAD,EAAQC,GAAR,EAAa;AACnB,QAAIC,SAAS,GAAG,IAAIC,IAAI,CAACC,KAAL,CAAWJ,KAAK,GAAG,CAAnB,CAApB;AACA,QAAIK,SAAS,GAAIL,KAAK,GAAG,CAAT,GAAc,CAA9B;AACA,QAAIM,OAAO,GAAG,IAAIH,IAAI,CAACC,KAAL,CAAWH,GAAG,GAAG,CAAjB,CAAlB;AACA,QAAIM,OAAO,GAAIN,GAAG,GAAG,CAAP,GAAY,CAA1B;AAEA,QAAIO,QAAQ,GAAGF,OAAO,GAAGJ,SAAzB;AACA,QAAIO,QAAQ,GAAGF,OAAO,GAAGF,SAAzB;;AAEA,QAAIG,QAAQ,IAAI,CAAZ,IAAiBC,QAAQ,IAAI,CAAC,CAAlC,EAAqC;AACnC,aAAO,IAAP;AACD,KAFD,MAEO,IAAID,QAAQ,IAAI,CAAZ,IAAiBC,QAAQ,IAAI,CAAjC,EAAoC;AACzC,aAAO,IAAP;AACD,KAFM,MAEA,IAAID,QAAQ,IAAI,CAAZ,IAAiBC,QAAQ,IAAI,CAAjC,EAAoC;AACzC,aAAO,IAAP;AACD,KAFM,MAEA,IAAID,QAAQ,IAAI,CAAZ,IAAiBC,QAAQ,IAAI,CAAjC,EAAoC;AACzC,aAAO,IAAP;AACD,KAFM,MAEA,IAAID,QAAQ,IAAI,CAAC,CAAb,IAAkBC,QAAQ,IAAI,CAAlC,EAAqC;AAC1C,aAAO,IAAP;AACD,KAFM,MAEA,IAAID,QAAQ,IAAI,CAAC,CAAb,IAAkBC,QAAQ,IAAI,CAAlC,EAAqC;AAC1C,aAAO,IAAP;AACD,KAFM,MAEA,IAAID,QAAQ,IAAI,CAAC,CAAb,IAAkBC,QAAQ,IAAI,CAAC,CAAnC,EAAsC;AAC3C,aAAO,IAAP;AACD,KAFM,MAEA,IAAID,QAAQ,IAAI,CAAZ,IAAiBC,QAAQ,IAAI,CAAC,CAAlC,EAAqC;AAC1C,aAAO,IAAP;AACD,KAFM,MAEA,IAAID,QAAQ,IAAI,CAAZ,IAAiBC,QAAQ,IAAI,CAAjC,EAAoC;AACzC,aAAO,IAAP;AACD,KAFM,MAEA,IAAID,QAAQ,IAAI,CAAZ,IAAiBC,QAAQ,IAAI,CAAC,CAAlC,EAAqC;AAC1C,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD;;AAhDM;;AAmDX,eAAenB,IAAf","sourcesContent":["class King {\n    constructor(player) {\n      this.player = player;\n      this.highlight = 0;\n      this.possible = 0;\n      this.checked = 0;\n      this.in_check = 0;\n      this.icon =\n        player == \"w\" ? (\n          <img src=\"./assets/icons/white_king.png\" className=\"piece\"></img>\n        ) : (\n          <img src=\"./assets/icons/black_king.png\" className=\"piece\"></img>\n        );\n      this.ascii = player == \"w\" ? \"k\" : \"K\";\n    }\n  \n    // function that defines piece's valid move shape\n    can_move(start, end) {\n      var start_row = 8 - Math.floor(start / 8);\n      var start_col = (start % 8) + 1;\n      var end_row = 8 - Math.floor(end / 8);\n      var end_col = (end % 8) + 1;\n  \n      var row_diff = end_row - start_row;\n      var col_diff = end_col - start_col;\n  \n      if (row_diff == 1 && col_diff == -1) {\n        return true;\n      } else if (row_diff == 1 && col_diff == 0) {\n        return true;\n      } else if (row_diff == 1 && col_diff == 1) {\n        return true;\n      } else if (row_diff == 0 && col_diff == 1) {\n        return true;\n      } else if (row_diff == -1 && col_diff == 1) {\n        return true;\n      } else if (row_diff == -1 && col_diff == 0) {\n        return true;\n      } else if (row_diff == -1 && col_diff == -1) {\n        return true;\n      } else if (row_diff == 0 && col_diff == -1) {\n        return true;\n      } else if (row_diff == 0 && col_diff == 2) {\n        return true;\n      } else if (row_diff == 0 && col_diff == -2) {\n        return true;\n      }\n      return false;\n    }\n}\n\nexport default King;"]},"metadata":{},"sourceType":"module"}