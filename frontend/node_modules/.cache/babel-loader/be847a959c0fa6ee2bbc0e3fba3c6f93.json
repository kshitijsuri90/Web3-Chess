{"ast":null,"code":"var _jsxFileName = \"/Users/kshitij.suri/Documents/Personal Work/nft-chess/src/components/Knight.js\";\nimport React from \"react\";\nimport style from \"../css/style.css\";\nimport white_knight from \"../assets/icons/white_knight.png\";\nimport black_knight from \"../assets/icons/black_knight.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Knight {\n  constructor(player) {\n    this.player = player;\n    this.highlight = 0;\n    this.possible = 0;\n    this.icon = player == \"w\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../assets/icons/white_knight.png\",\n      className: \"piece\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../assets/icons/black_knight.png\",\n      className: \"piece\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this);\n    this.ascii = player == \"w\" ? \"n\" : \"N\";\n  } // function that defines piece's valid move shape\n\n\n  can_move(start, end) {\n    var start_row = 8 - Math.floor(start / 8);\n    var start_col = start % 8 + 1;\n    var end_row = 8 - Math.floor(end / 8);\n    var end_col = end % 8 + 1;\n    var row_diff = end_row - start_row;\n    var col_diff = end_col - start_col;\n\n    if (row_diff == 1 && col_diff == -2) {\n      return true;\n    } else if (row_diff == 2 && col_diff == -1) {\n      return true;\n    } else if (row_diff == 2 && col_diff == 1) {\n      return true;\n    } else if (row_diff == 1 && col_diff == 2) {\n      return true;\n    } else if (row_diff == -1 && col_diff == 2) {\n      return true;\n    } else if (row_diff == -2 && col_diff == 1) {\n      return true;\n    } else if (row_diff == -2 && col_diff == -1) {\n      return true;\n    } else if (row_diff == -1 && col_diff == -2) {\n      return true;\n    }\n\n    return false;\n  }\n\n}\n\nexport default Knight;","map":{"version":3,"sources":["/Users/kshitij.suri/Documents/Personal Work/nft-chess/src/components/Knight.js"],"names":["React","style","white_knight","black_knight","Knight","constructor","player","highlight","possible","icon","ascii","can_move","start","end","start_row","Math","floor","start_col","end_row","end_col","row_diff","col_diff"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;;AAEA,MAAMC,MAAN,CAAa;AACXC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,QAAL,GAAgB,CAAhB;AACA,SAAKC,IAAL,GACEH,MAAM,IAAI,GAAV,gBACE;AAAK,MAAA,GAAG,EAAC,kCAAT;AAA4C,MAAA,SAAS,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE;AAAK,MAAA,GAAG,EAAC,kCAAT;AAA4C,MAAA,SAAS,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,YAJJ;AAMA,SAAKI,KAAL,GAAaJ,MAAM,IAAI,GAAV,GAAgB,GAAhB,GAAsB,GAAnC;AACD,GAZU,CAcX;;;AACAK,EAAAA,QAAQ,CAACC,KAAD,EAAQC,GAAR,EAAa;AACnB,QAAIC,SAAS,GAAG,IAAIC,IAAI,CAACC,KAAL,CAAWJ,KAAK,GAAG,CAAnB,CAApB;AACA,QAAIK,SAAS,GAAIL,KAAK,GAAG,CAAT,GAAc,CAA9B;AACA,QAAIM,OAAO,GAAG,IAAIH,IAAI,CAACC,KAAL,CAAWH,GAAG,GAAG,CAAjB,CAAlB;AACA,QAAIM,OAAO,GAAIN,GAAG,GAAG,CAAP,GAAY,CAA1B;AAEA,QAAIO,QAAQ,GAAGF,OAAO,GAAGJ,SAAzB;AACA,QAAIO,QAAQ,GAAGF,OAAO,GAAGF,SAAzB;;AAEA,QAAIG,QAAQ,IAAI,CAAZ,IAAiBC,QAAQ,IAAI,CAAC,CAAlC,EAAqC;AACnC,aAAO,IAAP;AACD,KAFD,MAEO,IAAID,QAAQ,IAAI,CAAZ,IAAiBC,QAAQ,IAAI,CAAC,CAAlC,EAAqC;AAC1C,aAAO,IAAP;AACD,KAFM,MAEA,IAAID,QAAQ,IAAI,CAAZ,IAAiBC,QAAQ,IAAI,CAAjC,EAAoC;AACzC,aAAO,IAAP;AACD,KAFM,MAEA,IAAID,QAAQ,IAAI,CAAZ,IAAiBC,QAAQ,IAAI,CAAjC,EAAoC;AACzC,aAAO,IAAP;AACD,KAFM,MAEA,IAAID,QAAQ,IAAI,CAAC,CAAb,IAAkBC,QAAQ,IAAI,CAAlC,EAAqC;AAC1C,aAAO,IAAP;AACD,KAFM,MAEA,IAAID,QAAQ,IAAI,CAAC,CAAb,IAAkBC,QAAQ,IAAI,CAAlC,EAAqC;AAC1C,aAAO,IAAP;AACD,KAFM,MAEA,IAAID,QAAQ,IAAI,CAAC,CAAb,IAAkBC,QAAQ,IAAI,CAAC,CAAnC,EAAsC;AAC3C,aAAO,IAAP;AACD,KAFM,MAEA,IAAID,QAAQ,IAAI,CAAC,CAAb,IAAkBC,QAAQ,IAAI,CAAC,CAAnC,EAAsC;AAC3C,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD;;AA1CU;;AA6Cb,eAAejB,MAAf","sourcesContent":["import React from \"react\";\nimport style from \"../css/style.css\";\nimport white_knight from \"../assets/icons/white_knight.png\";\nimport black_knight from \"../assets/icons/black_knight.png\";\n\nclass Knight {\n  constructor(player) {\n    this.player = player;\n    this.highlight = 0;\n    this.possible = 0;\n    this.icon =\n      player == \"w\" ? (\n        <img src=\"../assets/icons/white_knight.png\" className=\"piece\"></img>\n      ) : (\n        <img src=\"../assets/icons/black_knight.png\" className=\"piece\"></img>\n      );\n    this.ascii = player == \"w\" ? \"n\" : \"N\";\n  }\n\n  // function that defines piece's valid move shape\n  can_move(start, end) {\n    var start_row = 8 - Math.floor(start / 8);\n    var start_col = (start % 8) + 1;\n    var end_row = 8 - Math.floor(end / 8);\n    var end_col = (end % 8) + 1;\n\n    var row_diff = end_row - start_row;\n    var col_diff = end_col - start_col;\n\n    if (row_diff == 1 && col_diff == -2) {\n      return true;\n    } else if (row_diff == 2 && col_diff == -1) {\n      return true;\n    } else if (row_diff == 2 && col_diff == 1) {\n      return true;\n    } else if (row_diff == 1 && col_diff == 2) {\n      return true;\n    } else if (row_diff == -1 && col_diff == 2) {\n      return true;\n    } else if (row_diff == -2 && col_diff == 1) {\n      return true;\n    } else if (row_diff == -2 && col_diff == -1) {\n      return true;\n    } else if (row_diff == -1 && col_diff == -2) {\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default Knight;\n"]},"metadata":{},"sourceType":"module"}