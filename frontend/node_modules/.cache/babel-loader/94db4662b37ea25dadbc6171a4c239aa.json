{"ast":null,"code":"var _jsxFileName = \"/Users/kshitij.suri/Documents/Personal Work/nft-chess/src/components/Pawn.js\";\nimport React from \"react\";\nimport style from \"../css/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Pawn {\n  constructor(player) {\n    this.player = player;\n    this.highlight = 0;\n    this.possible = 0;\n    this.icon = player == \"w\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../assets/iconswhite_pawn.png\",\n      className: \"piece\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"./images/black_pawn.png\",\n      className: \"piece\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this);\n    this.ascii = player == \"w\" ? \"p\" : \"P\";\n  } // function that defines piece's valid move shape\n\n\n  can_move(start, end) {\n    var start_row = 8 - Math.floor(start / 8);\n    var start_col = start % 8 + 1;\n    var end_row = 8 - Math.floor(end / 8);\n    var end_col = end % 8 + 1;\n    var row_diff = end_row - start_row;\n    var col_diff = end_col - start_col;\n\n    if (this.player == \"w\") {\n      if (col_diff == 0) {\n        if (row_diff == 1 || row_diff == 2) return true;\n      } else if (col_diff == -1 || col_diff == 1) {\n        if (row_diff == 1) return true;\n      }\n    } else {\n      if (col_diff == 0) {\n        if (row_diff == -2 || row_diff == -1) return true;\n      } else if (col_diff == -1 || col_diff == 1) {\n        if (row_diff == -1) return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nexport default Pawn;","map":{"version":3,"sources":["/Users/kshitij.suri/Documents/Personal Work/nft-chess/src/components/Pawn.js"],"names":["React","style","Pawn","constructor","player","highlight","possible","icon","ascii","can_move","start","end","start_row","Math","floor","start_col","end_row","end_col","row_diff","col_diff"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;;AAEA,MAAMC,IAAN,CAAW;AACTC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,QAAL,GAAgB,CAAhB;AACA,SAAKC,IAAL,GACEH,MAAM,IAAI,GAAV,gBACE;AAAK,MAAA,GAAG,EAAC,+BAAT;AAAyC,MAAA,SAAS,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE;AAAK,MAAA,GAAG,EAAC,yBAAT;AAAmC,MAAA,SAAS,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,YAJJ;AAMA,SAAKI,KAAL,GAAaJ,MAAM,IAAI,GAAV,GAAgB,GAAhB,GAAsB,GAAnC;AACD,GAZQ,CAcT;;;AACAK,EAAAA,QAAQ,CAACC,KAAD,EAAQC,GAAR,EAAa;AACnB,QAAIC,SAAS,GAAG,IAAIC,IAAI,CAACC,KAAL,CAAWJ,KAAK,GAAG,CAAnB,CAApB;AACA,QAAIK,SAAS,GAAIL,KAAK,GAAG,CAAT,GAAc,CAA9B;AACA,QAAIM,OAAO,GAAG,IAAIH,IAAI,CAACC,KAAL,CAAWH,GAAG,GAAG,CAAjB,CAAlB;AACA,QAAIM,OAAO,GAAIN,GAAG,GAAG,CAAP,GAAY,CAA1B;AAEA,QAAIO,QAAQ,GAAGF,OAAO,GAAGJ,SAAzB;AACA,QAAIO,QAAQ,GAAGF,OAAO,GAAGF,SAAzB;;AAEA,QAAI,KAAKX,MAAL,IAAe,GAAnB,EAAwB;AACtB,UAAIe,QAAQ,IAAI,CAAhB,EAAmB;AACjB,YAAID,QAAQ,IAAI,CAAZ,IAAiBA,QAAQ,IAAI,CAAjC,EAAoC,OAAO,IAAP;AACrC,OAFD,MAEO,IAAIC,QAAQ,IAAI,CAAC,CAAb,IAAkBA,QAAQ,IAAI,CAAlC,EAAqC;AAC1C,YAAID,QAAQ,IAAI,CAAhB,EAAmB,OAAO,IAAP;AACpB;AACF,KAND,MAMO;AACL,UAAIC,QAAQ,IAAI,CAAhB,EAAmB;AACjB,YAAID,QAAQ,IAAI,CAAC,CAAb,IAAkBA,QAAQ,IAAI,CAAC,CAAnC,EAAsC,OAAO,IAAP;AACvC,OAFD,MAEO,IAAIC,QAAQ,IAAI,CAAC,CAAb,IAAkBA,QAAQ,IAAI,CAAlC,EAAqC;AAC1C,YAAID,QAAQ,IAAI,CAAC,CAAjB,EAAoB,OAAO,IAAP;AACrB;AACF;;AACD,WAAO,KAAP;AACD;;AAtCQ;;AAyCX,eAAehB,IAAf","sourcesContent":["import React from \"react\";\nimport style from \"../css/style.css\";\n\nclass Pawn {\n  constructor(player) {\n    this.player = player;\n    this.highlight = 0;\n    this.possible = 0;\n    this.icon =\n      player == \"w\" ? (\n        <img src=\"../assets/iconswhite_pawn.png\" className=\"piece\"></img>\n      ) : (\n        <img src=\"./images/black_pawn.png\" className=\"piece\"></img>\n      );\n    this.ascii = player == \"w\" ? \"p\" : \"P\";\n  }\n\n  // function that defines piece's valid move shape\n  can_move(start, end) {\n    var start_row = 8 - Math.floor(start / 8);\n    var start_col = (start % 8) + 1;\n    var end_row = 8 - Math.floor(end / 8);\n    var end_col = (end % 8) + 1;\n\n    var row_diff = end_row - start_row;\n    var col_diff = end_col - start_col;\n\n    if (this.player == \"w\") {\n      if (col_diff == 0) {\n        if (row_diff == 1 || row_diff == 2) return true;\n      } else if (col_diff == -1 || col_diff == 1) {\n        if (row_diff == 1) return true;\n      }\n    } else {\n      if (col_diff == 0) {\n        if (row_diff == -2 || row_diff == -1) return true;\n      } else if (col_diff == -1 || col_diff == 1) {\n        if (row_diff == -1) return true;\n      }\n    }\n    return false;\n  }\n}\n\nexport default Pawn;\n"]},"metadata":{},"sourceType":"module"}